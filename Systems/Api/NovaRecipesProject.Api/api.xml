<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NovaRecipesProject.Api</name>
    </assembly>
    <members>
        <member name="T:NovaRecipesProject.Api.Bootstrapper">
            <summary>
            API services bootstrapper
            </summary>
        </member>
        <member name="M:NovaRecipesProject.Api.Bootstrapper.RegisterAppServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Main to register app services
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:NovaRecipesProject.Api.Configuration.AuthConfiguration">
            <summary>
            Class for authentication configuration
            </summary>
        </member>
        <member name="M:NovaRecipesProject.Api.Configuration.AuthConfiguration.AddAppAuth(Microsoft.Extensions.DependencyInjection.IServiceCollection,NovaRecipesProject.Services.Settings.IdentitySettings)">
            <summary>
            Extension method for adding authentication
            </summary>
            <param name="services"></param>
            <param name="settings"></param>
            <returns></returns>
        </member>
        <member name="M:NovaRecipesProject.Api.Configuration.AuthConfiguration.UseAppAuth(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Extension method for enabling authentication
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="T:NovaRecipesProject.Api.Configuration.AutoMapperConfiguration">
            <summary>
            AutoMapper configuration
            </summary>
        </member>
        <member name="M:NovaRecipesProject.Api.Configuration.AutoMapperConfiguration.AddAppAutoMappers(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add automappers
            </summary>
            <param name="services">Services collection</param>
        </member>
        <member name="T:NovaRecipesProject.Api.Configuration.ControllerAndViewsConfiguration">
            <summary>
            Class to use in DI in Program
            </summary>
        </member>
        <member name="M:NovaRecipesProject.Api.Configuration.ControllerAndViewsConfiguration.AddAppControllerAndViews(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            DI for services
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:NovaRecipesProject.Api.Configuration.ControllerAndViewsConfiguration.UseAppControllerAndViews(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)">
            <summary>
            DI for builder
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="T:NovaRecipesProject.Api.Configuration.CorsConfiguration">
            <summary>
            CORS configuration
            </summary>
        </member>
        <member name="M:NovaRecipesProject.Api.Configuration.CorsConfiguration.AddAppCors(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add CORS
            </summary>
            <param name="services">Services collection</param>
        </member>
        <member name="M:NovaRecipesProject.Api.Configuration.CorsConfiguration.UseAppCors(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Use service
            </summary>
            <param name="app">Application</param>
        </member>
        <member name="T:NovaRecipesProject.Api.Configuration.HealthCheckConfiguration">
            <summary>
            Class for HealthCheck configuration 
            </summary>
        </member>
        <member name="M:NovaRecipesProject.Api.Configuration.HealthCheckConfiguration.AddAppHealthChecks(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Extension method to add HealthCheck related things
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:NovaRecipesProject.Api.Configuration.HealthCheckConfiguration.UseAppHealthChecks(Microsoft.AspNetCore.Builder.WebApplication)">
            <summary>
            Extension method to enable HealthChecks in app
            </summary>
            <param name="app"></param>
        </member>
        <member name="T:NovaRecipesProject.Api.Configuration.HealthChecks.SelfHealthCheck">
            <inheritdoc />
        </member>
        <member name="M:NovaRecipesProject.Api.Configuration.HealthChecks.SelfHealthCheck.CheckHealthAsync(Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:NovaRecipesProject.Api.Configuration.LoggerConfiguration">
            <summary>
            Logger Configuration
            </summary>
        </member>
        <member name="M:NovaRecipesProject.Api.Configuration.LoggerConfiguration.AddAppLogger(Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Add logger
            </summary>
        </member>
        <member name="T:NovaRecipesProject.Api.Configuration.MiddlewaresConfiguration">
            <summary>
            Middleware configuration class
            </summary>
        </member>
        <member name="M:NovaRecipesProject.Api.Configuration.MiddlewaresConfiguration.UseAppMiddlewares(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Method for DI to use custom middlewares
            </summary>
            <param name="app"></param>
        </member>
        <member name="T:NovaRecipesProject.Api.Configuration.SwaggerConfiguration">
            <summary>
            Swagger configuration
            </summary>
        </member>
        <member name="M:NovaRecipesProject.Api.Configuration.SwaggerConfiguration.AddAppSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection,NovaRecipesProject.Services.Settings.IdentitySettings,NovaRecipesProject.Services.Settings.SwaggerSettings)">
            <summary>
            Method for adding swagger related things (also includes some things related to OpenAPI)
            </summary>
            <param name="services"></param>
            <param name="identitySettings"></param>
            <param name="swaggerSettings"></param>
            <returns></returns>
        </member>
        <member name="M:NovaRecipesProject.Api.Configuration.SwaggerConfiguration.UseAppSwagger(Microsoft.AspNetCore.Builder.WebApplication)">
            <summary>
            Start OpenAPI UI
            </summary>
            <param name="app">Web application</param>
        </member>
        <member name="T:NovaRecipesProject.Api.Configuration.ValidatorConfiguration">
            <summary>
            Configuration class for validation
            </summary>
        </member>
        <member name="M:NovaRecipesProject.Api.Configuration.ValidatorConfiguration.AddAppValidator(Microsoft.Extensions.DependencyInjection.IMvcBuilder)">
            <summary>
            Method for DI
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="T:NovaRecipesProject.Api.Configuration.VersioningConfiguration">
            <summary>
            Versioning configuration
            </summary>
        </member>
        <member name="M:NovaRecipesProject.Api.Configuration.VersioningConfiguration.AddAppVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Add version support for API
            </summary>
            <param name="services">Services collection</param>
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.Accounts.AccountsController">
            <summary>
            Controller for workaround with user accounts. Such as registration, login, deleting account
            </summary>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Accounts.AccountsController.#ctor(AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{NovaRecipesProject.Api.Controllers.Accounts.AccountsController},NovaRecipesProject.Services.UserAccount.IUserAccountService)">
            <summary>
            Constructor
            </summary>
            <param name="mapper"></param>
            <param name="logger"></param>
            <param name="userAccountService"></param>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Accounts.AccountsController.Register(NovaRecipesProject.API.Controllers.Models.RegisterUserAccountRequest)">
            <summary>
            Method for registration, uses model in args to register new user in database
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.Categories.CategoriesController">
            <summary>
            Category controller
            </summary>
            <response code="400"></response>
            <response code="401"></response>
            <response code="403"></response>
            <response code="404"></response>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Categories.CategoriesController.#ctor(AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{NovaRecipesProject.Api.Controllers.Categories.CategoriesController},NovaRecipesProject.Services.Categories.ICategoryService)">
            <summary>
            Constructor
            </summary>
            <param name="mapper"></param>
            <param name="logger"></param>
            <param name="recipeService"></param>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Categories.CategoriesController.GetCategories(System.Int32,System.Int32)">
            <summary>
            Basic get categories
            </summary>
            <param name="offset">Offset to the first element</param>
            <param name="limit">Count elements on the page</param>
            <response code="200">List of category responses</response>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Categories.CategoriesController.GetCategoryById(System.Int32)">
            <summary>
            Gets category by its id
            </summary>
            <param name="id">Category id by which it returns correct data</param>
            <response code="200">Category with corresponding id</response>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Categories.CategoriesController.AddCategory(NovaRecipesProject.Api.Controllers.Categories.Models.AddCategoryRequest)">
            <summary>
            Method to add new data to DB
            </summary>
            <param name="request"></param>
            <response code="200">Returns category model which were made while adding new data do DB</response>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Categories.CategoriesController.UpdateCategory(System.Int32,NovaRecipesProject.Api.Controllers.Categories.Models.UpdateCategoryRequest)">
            <summary>
            Updates category by its id and basic data
            </summary>
            <param name="id">Id of category model</param>
            <param name="request">Category model to update to</param>
            <response code="200"></response>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Categories.CategoriesController.DeleteCategory(System.Int32)">
            <summary>
            Method to delete data in DB
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.Categories.Models.AddCategoryRequest">
            <summary>
            Model for adding new category to DB
            </summary>
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.Categories.Models.AddCategoryRequestProfile">
            <inheritdoc />
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Categories.Models.AddCategoryRequestProfile.#ctor">
            <inheritdoc />
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.Categories.Models.CategoryResponse">
            <summary>
            Category response model which will be used in controllers
            </summary>
        </member>
        <member name="P:NovaRecipesProject.Api.Controllers.Categories.Models.CategoryResponse.Id">
            <summary>
            Category's Id in DB
            </summary>
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.Categories.Models.CategoryResponseProfile">
            <inheritdoc />
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Categories.Models.CategoryResponseProfile.#ctor">
            <inheritdoc />
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.Categories.Models.UpdateCategoryRequest">
            <summary>
            DTO model used as arg in update controller methods
            </summary>
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.Categories.Models.UpdateCategoryRequestProfile">
            <inheritdoc />
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Categories.Models.UpdateCategoryRequestProfile.#ctor">
            <inheritdoc />
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.Ingredients.IngredientsController">
            <summary>
            Ingredient controller
            </summary>
            <response code="400"></response>
            <response code="401"></response>
            <response code="403"></response>
            <response code="404"></response>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Ingredients.IngredientsController.#ctor(AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{NovaRecipesProject.Api.Controllers.Ingredients.IngredientsController},NovaRecipesProject.Services.Ingredients.IIngredientService)">
            <summary>
            Constructor
            </summary>
            <param name="mapper"></param>
            <param name="logger"></param>
            <param name="recipeService"></param>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Ingredients.IngredientsController.GetIngredients(System.Int32,System.Int32)">
            <summary>
            Basic get ingredients
            </summary>
            <param name="offset">Offset to the first element</param>
            <param name="limit">Count elements on the page</param>
            <response code="200">List of ingredients responses</response>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Ingredients.IngredientsController.GetIngredientById(System.Int32)">
            <summary>
            Gets ingredient by its id
            </summary>
            <param name="id">Ingredient id by which it returns correct data</param>
            <response code="200">Ingredient with corresponding id</response>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Ingredients.IngredientsController.AddIngredient(NovaRecipesProject.Api.Controllers.Ingredients.Models.AddIngredientRequest)">
            <summary>
            Method to add new data to DB
            </summary>
            <param name="request"></param>
            <response code="200">Returns ingredient model which were made while adding new data do DB</response>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Ingredients.IngredientsController.UpdateIngredient(System.Int32,NovaRecipesProject.Api.Controllers.Ingredients.Models.UpdateIngredientRequest)">
            <summary>
            Updates ingredient by its id and basic data
            </summary>
            <param name="id">Id of ingredient model</param>
            <param name="request">Ingredient model to update to</param>
            <response code="200"></response>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Ingredients.IngredientsController.DeleteIngredient(System.Int32)">
            <summary>
            Method to delete data in DB
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.Ingredients.Models.AddIngredientRequest">
            <summary>
            Model used in controllers;
            Used as argument for POST methods
            </summary>
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.Ingredients.Models.IngredientResponse">
            <summary>
            Model used in controllers;
            Used as argument for GET methods
            </summary>
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.Ingredients.Models.UpdateIngredientRequest">
            <summary>
            Model used in controllers;
            Used as argument for PUT methods
            </summary>
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.RecipeParagraphs.Models.AddRecipeParagraphRequest">
            <summary>
            Add DTO request-model
            </summary>
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.RecipeParagraphs.Models.RecipeParagraphResponse">
            <summary>
            DTO response model 
            </summary>
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.RecipeParagraphs.Models.UpdateRecipeParagraphRequest">
            <summary>
            Update DTO request-model
            </summary>
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.RecipeParagraphs.RecipeParagraphsController">
            <summary>
            Recipe paragraph controller
            </summary>
            <response code="400"></response>
            <response code="401"></response>
            <response code="403"></response>
            <response code="404"></response>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.RecipeParagraphs.RecipeParagraphsController.#ctor(AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{NovaRecipesProject.Api.Controllers.RecipeParagraphs.RecipeParagraphsController},NovaRecipesProject.Services.RecipeParagraphs.IRecipeParagraphService)">
            <summary>
            Constructor
            </summary>
            <param name="mapper"></param>
            <param name="logger"></param>
            <param name="recipeService"></param>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.RecipeParagraphs.RecipeParagraphsController.GetRecipeParagraphs(System.Int32,System.Int32)">
            <summary>
            Basic get RecipeParagraph
            </summary>
            <param name="offset">Offset to the first element</param>
            <param name="limit">Count elements on the page</param>
            <response code="200">List of RecipeParagraph responses</response>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.RecipeParagraphs.RecipeParagraphsController.GetRecipeParagraphById(System.Int32)">
            <summary>
            Gets RecipeParagraph by its id
            </summary>
            <param name="id">RecipeParagraph id by which it returns correct data</param>
            <response code="200">RecipeParagraph with corresponding id</response>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.RecipeParagraphs.RecipeParagraphsController.AddRecipeParagraph(NovaRecipesProject.Api.Controllers.RecipeParagraphs.Models.AddRecipeParagraphRequest)">
            <summary>
            Method to add new data to DB
            </summary>
            <param name="request"></param>
            <response code="200">Returns RecipeParagraph model which were made while adding new data do DB</response>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.RecipeParagraphs.RecipeParagraphsController.UpdateRecipeParagraph(System.Int32,NovaRecipesProject.Api.Controllers.RecipeParagraphs.Models.UpdateRecipeParagraphRequest)">
            <summary>
            Updates RecipeParagraph by its id and basic data
            </summary>
            <param name="id">Id of RecipeParagraph model</param>
            <param name="request">RecipeParagraph model to update to</param>
            <response code="200"></response>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.RecipeParagraphs.RecipeParagraphsController.DeleteRecipeParagraph(System.Int32)">
            <summary>
            Mehtod to delete data in DB
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.Recipes.Models.AddRecipeRequest">
            <summary>
            DTO for adding new data to DB
            </summary>
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.Recipes.Models.AddRecipeRequestProfile">
            <inheritdoc />
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Recipes.Models.AddRecipeRequestProfile.#ctor">
            <summary>
            Constructor which describes mapping for this DTO
            </summary>
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.Recipes.Models.RecipeResponse">
            <summary>
            Recipe response model which will be used in controllers
            </summary>
        </member>
        <member name="P:NovaRecipesProject.Api.Controllers.Recipes.Models.RecipeResponse.Id">
            <summary>
            Recipe's id in DB
            </summary>
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.Recipes.Models.RecipeResponseProfile">
            <inheritdoc />
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Recipes.Models.RecipeResponseProfile.#ctor">
            <summary>
            Configures mapping for this exact class
            </summary>
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.Recipes.Models.UpdateRecipeRequest">
            <summary>
            Simple model to use as arg in requests in book controller
            </summary>
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.Recipes.Models.UpdateRecipeRequestProfile">
            <inheritdoc />
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Recipes.Models.UpdateRecipeRequestProfile.#ctor">
            <summary>
            Constructor which describes mapping profiles for this DTO
            </summary>
        </member>
        <member name="T:NovaRecipesProject.Api.Controllers.Recipes.RecipesController">
            <summary>
            Recipes controller
            </summary>
            <response code="400"></response>
            <response code="401"></response>
            <response code="403"></response>
            <response code="404"></response>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Recipes.RecipesController.#ctor(AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{NovaRecipesProject.Api.Controllers.Recipes.RecipesController},NovaRecipesProject.Services.Recipes.IRecipeService)">
            <summary>
            Constructor
            </summary>
            <param name="mapper"></param>
            <param name="logger"></param>
            <param name="recipeService"></param>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Recipes.RecipesController.GetRecipes(System.Int32,System.Int32)">
            <summary>
            Basic get recipes 
            </summary>
            <param name="offset">Offset to the first element</param>
            <param name="limit">Count elements on the page</param>
            <response code="200">List of recipe responses</response>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Recipes.RecipesController.GetUserRecipes(System.Int32,System.Int32,System.Int32)">
            <summary>
            Basic get recipes for some user
            </summary>
            <param name="userId">User's id to get data for</param>
            <param name="offset">Offset to the first element</param>
            <param name="limit">Count elements on the page</param>
            <response code="200">List of recipe responses</response>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Recipes.RecipesController.GetRecipeById(System.Int32)">
            <summary>
            Gets recipe by its id
            </summary>
            <param name="id">Recipe id by which it returns correct data</param>
            <response code="200">Recipe with corresponding id</response>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Recipes.RecipesController.AddRecipe(NovaRecipesProject.Api.Controllers.Recipes.Models.AddRecipeRequest)">
            <summary>
            Method to add new data to DB
            </summary>
            <param name="request"></param>
            <response code="200">Returns recipe model which were made while adding new data do DB</response>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Recipes.RecipesController.AddRecipeWithUser(System.Int32,NovaRecipesProject.Api.Controllers.Recipes.Models.AddRecipeRequest)">
            <summary>
            Method to add new data to DB
            </summary>
            <param name="userId"></param>
            <param name="request"></param>
            <response code="200">Returns recipe model which were made while adding new data do DB</response>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Recipes.RecipesController.UpdateRecipe(System.Int32,NovaRecipesProject.Api.Controllers.Recipes.Models.UpdateRecipeRequest)">
            <summary>
            Updates recipe by its id and basic data
            </summary>
            <param name="id">Id of recipe model</param>
            <param name="updateRecipeRequest">Recipe model to update to</param>
            <response code="200"></response>
        </member>
        <member name="M:NovaRecipesProject.Api.Controllers.Recipes.RecipesController.DeleteRecipe(System.Int32)">
            <summary>
            Mehtod to delete data in DB
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:NovaRecipesProject.Api.Middleware.ExceptionsMiddleware">
            <summary>
            Basic middleware exception
            </summary>
        </member>
        <member name="M:NovaRecipesProject.Api.Middleware.ExceptionsMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Constructor
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:NovaRecipesProject.Api.Middleware.ExceptionsMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Main async method
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:NovaRecipesProject.Api.Pages.IndexModel">
            <summary>
            Index page model
            </summary>
        </member>
        <member name="P:NovaRecipesProject.Api.Pages.IndexModel.OpenApiEnabled">
            <summary>
            Toggle for OpenAPI to be enabled
            </summary>
        </member>
        <member name="P:NovaRecipesProject.Api.Pages.IndexModel.Version">
            <summary>
            Data about version
            </summary>
        </member>
        <member name="P:NovaRecipesProject.Api.Pages.IndexModel.HelloMessage">
            <summary>
            Just hello message, nothing more
            </summary>
        </member>
        <member name="M:NovaRecipesProject.Api.Pages.IndexModel.#ctor(NovaRecipesProject.Services.Settings.SwaggerSettings,NovaRecipesProject.Api.Settings.ApiSpecialSettings)">
            <inheritdoc />
        </member>
        <member name="M:NovaRecipesProject.Api.Pages.IndexModel.OnGet">
            <summary>
            Method used if something gets property data
            </summary>
        </member>
        <member name="T:NovaRecipesProject.API.Controllers.Models.RegisterUserAccountRequest">
            <summary>
            Model used for registring new users
            </summary>
        </member>
        <member name="P:NovaRecipesProject.API.Controllers.Models.RegisterUserAccountRequest.Name">
            <summary>
            User's name (login)
            </summary>
        </member>
        <member name="P:NovaRecipesProject.API.Controllers.Models.RegisterUserAccountRequest.Email">
            <summary>
            User's email
            </summary>
        </member>
        <member name="P:NovaRecipesProject.API.Controllers.Models.RegisterUserAccountRequest.Password">
            <summary>
            User's password
            </summary>
        </member>
        <member name="T:NovaRecipesProject.API.Controllers.Models.RegisterUserAccountRequestValidator">
            <inheritdoc />
        </member>
        <member name="M:NovaRecipesProject.API.Controllers.Models.RegisterUserAccountRequestValidator.#ctor">
            <inheritdoc />
        </member>
        <member name="T:NovaRecipesProject.API.Controllers.Models.RegisterUserAccountRequestProfile">
            <inheritdoc />
        </member>
        <member name="M:NovaRecipesProject.API.Controllers.Models.RegisterUserAccountRequestProfile.#ctor">
            <inheritdoc />
        </member>
        <member name="T:NovaRecipesProject.API.Controllers.Models.UserAccountResponse">
            <summary>
            Model that controllers returns as the result of their actions
            </summary>
        </member>
        <member name="P:NovaRecipesProject.API.Controllers.Models.UserAccountResponse.Id">
            <summary>
            User's Id
            </summary>
        </member>
        <member name="P:NovaRecipesProject.API.Controllers.Models.UserAccountResponse.Name">
            <summary>
            User's name which is basically login
            </summary> 
        </member>
        <member name="P:NovaRecipesProject.API.Controllers.Models.UserAccountResponse.Email">
            <summary>
            User email
            </summary>
        </member>
        <member name="T:NovaRecipesProject.API.Controllers.Models.UserAccountResponseProfile">
            <inheritdoc />
        </member>
        <member name="M:NovaRecipesProject.API.Controllers.Models.UserAccountResponseProfile.#ctor">
            <inheritdoc />
        </member>
    </members>
</doc>
